{"version":3,"sources":["helpers/resultHelper.js","components/Board/Summary/Summary.jsx","actions/resultsAction.js","helpers/actionTypes.js","components/Board/Square/Cross/Cross.jsx","components/Board/Square/Zero/Zero.jsx","components/Board/Square/Square.jsx","actions/boardActions.js","actions/playerActions.js","components/Board/Board.jsx","App.js","serviceWorker.js","reducers/boardReducer.js","reducers/playerReducer.js","reducers/resultReducer.js","reducers/index.js","store.js","index.js"],"names":["checkVictory","board","symbol","connect","players","result","dispatch","checkResult","type","filter","length","props","tie","win","className","player","p1","style","flexDirection","display","paddingLeft","defaultValue","width","height","marginTop","backgroundColor","color","marginLeft","placeholder","p2","turn","Cross","Zero","draw","cellIndex","Promise","resolve","drawXAction","drawOAction","toggleTurn","index","disabled","onClick","then","id","map","i","key","App","Boolean","window","location","hostname","match","initialState","combineReducers","state","action","newXState","newOState","newState","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e44d92d.chunk.js","sourcesContent":["export function checkVictory(board, symbol) {\r\n  if (board[0] === symbol && board[1] === symbol && board[2] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[3] === symbol && board[4] === symbol && board[5] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[6] === symbol && board[7] === symbol && board[8] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[0] === symbol && board[3] === symbol && board[6] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[1] === symbol && board[4] === symbol && board[7] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[2] === symbol && board[5] === symbol && board[8] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[0] === symbol && board[4] === symbol && board[8] === symbol) {\r\n    return true\r\n  }\r\n\r\n  if (board[6] === symbol && board[4] === symbol && board[2] === symbol) {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { checkResult } from '../../../actions/resultsAction.js';\r\nimport {Input,Button} from \"antd\";\r\nfunction Summary(props) {\r\n\r\n  const { board, players, result, checkResult } = props;\r\n\r\n  if (!(result.tie || result.win)) {\r\n    checkResult(board)\r\n  }\r\n\r\n  if (result.tie) {\r\n    return <div className=\"alert alert-info mt-2\">It's a Draw :(</div>\r\n  } else if (result.win === 'X') {\r\n    const player = players.p1 === 'X' ? 'Player 1' : 'Player 2'\r\n    return <div className=\"alert alert-success mt-2\">{player} Wins!</div>\r\n  } else if (result.win === 'O') {\r\n    const player = players.p1 === 'O' ? 'Player 1' : 'Player 2'\r\n    return <div className=\"alert alert-success mt-2\">{player} Wins!</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <div>\r\n        <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n        <p style={{paddingLeft:\"-150px\"}}>Player 1:  <Input defaultValue={ players.p1}></Input></p>\r\n        <Button style={{width:100,height:35,marginTop:20,backgroundColor:\"green\",color:\"white\",marginLeft:30}}>Start </Button>\r\n        <Button style={{width:100,height:35,marginTop:20,marginLeft:30}}>Reset </Button>\r\n        <p style={{paddingLeft:30}}>Player 2:  <Input placeholder={players.p2}></Input></p>\r\n        </div>\r\n      </div>\r\n      <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n        <p>\r\n          <strong>Current Turn</strong>:\r\n          {players.turn === 'p1' ? <span className=\"badge badge-pill badge-danger\">Player 1</span> : <span className=\"badge badge-pill badge-success\">Player 2</span>}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  ({ board, players, result }) => ({ board, players, result }),\r\n  dispatch => ({ checkResult: (board) => dispatch(checkResult(board)) })\r\n)(Summary)","import { X_WINS, O_WINS, TIE } from '../helpers/actionTypes'\r\nimport { checkVictory } from '../helpers/resultHelper'\r\n\r\nexport function checkResult(board) {\r\n  if (checkVictory(board, 'X')) {\r\n    return {\r\n      type: X_WINS\r\n    }\r\n  } else if (checkVictory(board, 'O')) {\r\n    return {\r\n      type: O_WINS\r\n    }\r\n  } else {\r\n    const check = board.filter(symbol => symbol === null)\r\n    if (check.length === 0) {\r\n      return {\r\n        type: TIE\r\n      }\r\n    } else {\r\n      return {\r\n        type: 'RANDOM'\r\n      }\r\n    }\r\n  }\r\n}","export const DRAW_X = 'DRAW_X'\r\nexport const DRAW_O = 'DRAW_O'\r\n\r\nexport const PLAYER_X = 'PLAYER_X'\r\nexport const PLAYER_O = 'PLAYER_X'\r\nexport const TURN = 'TURN'\r\n\r\nexport const X_WINS = 'X_WINS'\r\nexport const O_WINS = 'O_WINS'\r\nexport const TIE = 'TIE'","import React from 'react'\r\n\r\nfunction Cross(props) {\r\n  return <div className=\"symbol text-center\">X</div>\r\n}\r\n\r\nexport default Cross","import React from 'react'\r\n\r\nfunction Zero(props) {\r\n  return <div className=\"symbol text-center\">O</div>\r\n}\r\n\r\nexport default Zero","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Cross from './Cross/Cross.jsx'\r\nimport Zero from './Zero/Zero.jsx'\r\nimport { drawXAction, drawOAction } from '../../../actions/boardActions.js';\r\nimport { toggleTurnAction } from '../../../actions/playerActions.js';\r\n\r\nfunction Square(props) {\r\n  const { symbol, index, draw, players, board, toggleTurn } = props\r\n\r\n  const disabled = symbol ? 'disabled' : ''\r\n\r\n  return (\r\n    <div className={'cell ' + disabled} onClick={() => draw(board, players, index).then(() => { toggleTurn(); })}>\r\n      {symbol ? (symbol === 'X' ? <Cross /> : <Zero />) : ''}\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ board, players }) => ({ board, players })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  draw: (board, players, cellIndex) => {\r\n    if (!board[cellIndex]) {\r\n      if (players[players.turn] === 'X') {\r\n        return dispatch(drawXAction(cellIndex))\r\n      } else {\r\n        return dispatch(drawOAction(cellIndex))\r\n      }\r\n    }\r\n  },\r\n  toggleTurn: () => dispatch(toggleTurnAction())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square)","import { DRAW_X, DRAW_O } from '../helpers/actionTypes'\r\n\r\nexport function drawXAction(cellIndex) {\r\n  return (dispatch) => {\r\n    return new Promise(resolve => {\r\n      dispatch({\r\n        type: DRAW_X,\r\n        cellIndex\r\n      })\r\n      resolve()\r\n    })\r\n  }\r\n}\r\n\r\nexport function drawOAction(cellIndex) {\r\n  return (dispatch) => {\r\n    return new Promise(resolve => {\r\n      dispatch({\r\n        type: DRAW_O,\r\n        cellIndex\r\n      })\r\n      resolve()\r\n    })\r\n  }\r\n}\r\n\r\n","import { PLAYER_X, TURN, PLAYER_O } from '../helpers/actionTypes'\r\n\r\nexport function selectXPlayerAction(player) {\r\n  return {\r\n    type: PLAYER_X,\r\n    player\r\n  }\r\n}\r\n\r\nexport function selectOPlayerAction(player) {\r\n  return {\r\n    type: PLAYER_O,\r\n    player\r\n  }\r\n}\r\n\r\nexport function toggleTurnAction() {\r\n  return {\r\n    type: TURN\r\n  }\r\n}","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Summary from './Summary/Summary.jsx'\r\nimport Square from './Square/Square.jsx'\r\n\r\nfunction Board(props) {\r\n\r\n  const { board } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <Summary />\r\n       <p style={{paddingLeft: 90}}><strong>My Tic Tac Toe</strong></p>\r\n      <div id=\"board\" className=\"mt-4 d-flex flex-wrap\">\r\n        {\r\n          board.map((symbol, i) => <Square key={i} index={i} symbol={symbol} />)\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default connect(({ board }) => ({ board }))(Board)","import React from 'react';\r\nimport \"./App.css\"\r\n\r\nimport Board from './components/Board/Board.jsx'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col col-md-6 offset-md-3\">\r\n          <Board />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { DRAW_X, DRAW_O } from '../helpers/actionTypes'\r\n\r\nconst initialState = [\r\n  null, null, null,\r\n  null, null, null,\r\n  null, null, null,\r\n]\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case DRAW_X:\r\n      const newXState = [...state]\r\n      newXState[action.cellIndex] = 'X'\r\n      return newXState\r\n\r\n    case DRAW_O:\r\n      const newOState = [...state]\r\n      newOState[action.cellIndex] = 'O'\r\n      return newOState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { PLAYER_X, TURN, PLAYER_O } from '../helpers/actionTypes'\r\n\r\nconst initialState = {\r\n  p1: 'X',\r\n  p2: 'O',\r\n  turn: 'p1'\r\n}\r\n\r\nexport function playerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PLAYER_X:\r\n      const newXState = { ...state }\r\n\r\n      if (action.player === 'p1') {\r\n        newXState.p1 = 'X'\r\n        newXState.p2 = 'O'\r\n      } else {\r\n        newXState.p1 = 'O'\r\n        newXState.p2 = 'X'\r\n      }\r\n\r\n      return newXState\r\n\r\n    case PLAYER_O:\r\n      const newOState = { ...state }\r\n\r\n      if (action.player === 'p1') {\r\n        newOState.p1 = 'O'\r\n        newOState.p2 = 'X'\r\n      } else {\r\n        newOState.p1 = 'X'\r\n        newOState.p2 = 'O'\r\n      }\r\n\r\n      return newOState\r\n\r\n    case TURN:\r\n      const newState = { ...state }\r\n\r\n      if (newState.turn === 'p1') {\r\n        newState.turn = 'p2'\r\n      } else {\r\n        newState.turn = 'p1'\r\n      }\r\n\r\n      return newState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { X_WINS, O_WINS, TIE } from '../helpers/actionTypes'\r\n\r\nconst initialState = {\r\n  win: null,\r\n  tie: false\r\n}\r\n\r\nexport function resultReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case X_WINS:\r\n      return {\r\n        win: 'X',\r\n        tie: false\r\n      }\r\n\r\n    case O_WINS:\r\n      return {\r\n        win: 'O',\r\n        tie: false\r\n      }\r\n\r\n    case TIE:\r\n      return {\r\n        win: null,\r\n        tie: true\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport { boardReducer } from './boardReducer'\r\nimport { playerReducer } from './playerReducer'\r\nimport { resultReducer } from './resultReducer';\r\n\r\nexport default combineReducers({\r\n  board: boardReducer,\r\n  players: playerReducer,\r\n  result: resultReducer\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}